name: Emulator tests

on:
  push:
    branches: [ main, master, feature/** ]
  pull_request:
    branches: [ main, master ]

jobs:
  emulator-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: emulator-tests
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure .gitmodules exists
        run: |
          if [ ! -f .gitmodules ]; then
            echo '# generated by CI to avoid submodule warnings' > .gitmodules
            echo '.gitmodules created'
          else
            echo '.gitmodules already present'
          fi

      - name: Debug workspace
        run: |
          echo "=== Workspace root ==="
          pwd
          echo "=== List files (root) ==="
          ls -la
          if [ -f .gitmodules ]; then
            echo "=== .gitmodules content ==="
            cat .gitmodules
          else
            echo "No .gitmodules file present"
          fi

      - name: Cache npm (tooling)
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            tooling/node_modules
          # Use package-lock.json hash for deterministic caching
          key: ${{ runner.os }}-npm-tooling-${{ hashFiles('tooling/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-tooling-

      - name: Setup Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install firebase-tools
        run: npm install -g firebase-tools

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk-version: 'stable'

      - name: Install tooling deps (npm)
        run: |
          if [ -f tooling/package-lock.json ]; then
            echo "tooling/package-lock.json found -> npm ci --prefix tooling"
            npm ci --prefix tooling
          else
            echo "tooling/package-lock.json not found -> npm install --prefix tooling"
            npm install --prefix tooling
          fi
      - name: Run emulator-backed tests (Node)
        run: |
          # Start emulator(s) and run the helper script inside their context.
          # The helper installs tooling deps, generates the staff token and runs the
          # Node-based end-to-end auth + rules test (no Flutter required).
          chmod +x tooling/ci/run_emulator_tests.sh
          # Provide a fixed project id so the Auth emulator can start in CI.
          firebase emulators:exec --project demo-no-project --config firebase.json --only firestore,auth -- ./tooling/ci/run_emulator_tests.sh
