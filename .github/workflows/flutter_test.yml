name: Flutter CI

on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Flutter tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: false

      - name: Populate .gitmodules for runner cleanup
        run: |
          set -e
          # Some branches/history in this repo contain folders that look like submodules
          # (e.g. .../flutter). The checkout action runs `git submodule foreach` during
          # post-job cleanup which fails if .gitmodules lacks URLs for those paths.
          # Create a safe .gitmodules listing any 'flutter' directories found so cleanup
          # will not error. Use a harmless placeholder URL.
          : > .gitmodules
          echo "Scanning for 'flutter' directories to populate .gitmodules..."
          # Find directories named 'flutter' (exclude the cloned $HOME/flutter SDK)
          find . -type d -name flutter -print0 \
            | while IFS= read -r -d '' d; do
                # normalize path (remove leading ./)
                p="${d#./}"
                # skip the Flutter SDK if somehow present under HOME
                if [ "${p#home/runner/work}" != "${p}" ]; then
                  # ignore runner-local HOME flutter paths
                  continue
                fi
                echo "[submodule \"$p\"]" >> .gitmodules
                echo "  path = $p" >> .gitmodules
                echo "  url = https://example.com/dummy.git" >> .gitmodules
              done || true

      - name: Install Flutter (clone stable)
        run: |
          set -e
          echo "Cloning Flutter SDK (stable channel)"
          git clone --depth 1 https://github.com/flutter/flutter.git -b stable $HOME/flutter
          echo "$HOME/flutter/bin" >> $GITHUB_PATH
          echo "$HOME/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
          export PATH="$HOME/flutter/bin:$HOME/flutter/bin/cache/dart-sdk/bin:$PATH"
          flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test -r expanded
